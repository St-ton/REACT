import React from 'react'
import ProductContainer from "../ProductContainer/ProductContainer";

function App()
{

  return <div>
<ProductContainer/>                
        
  </div>;
}

export default App;

//todo 1) создать и протестировать компонент Product со значениями название товара, описание, цена и картинка (любая из трех)

//todo 2) доработать App таким образом, чтобы при загрузке страницы отправлялся сетевой запрос и в консоль выводился массив с продуктами, у которых следующий набор свойств (id, title, price, description, image)

//todo 3) добавить компонент ProductContainer  перенести в него сетевой запрос добавить в него state и загрузку товаров из API в стейт пользуясь map отобразить карточки 

//todo 4) в ProductContainer создать функцию, которая получает id продукта и выводит его title передать эту функцию в карточки и вызывать при нажатии на кнопку (предварительно добавить кнопку)

//todo 5) создать еще один стейт (basket) добавить функцию, которая принимает id продукта  функция находит продукт по id и добавляет его в стейт basket повесить данную функцию на кнопку в карточке с продуктом

//todo 6) доработать функцию addToBasket продукт в стейте basket должен быть со свойством count и значением 1

// todo 7) добавить компонент BasketContainer, который выводит параграфы с названиями товаров из корзины

//todo 8) добавить компонент BasketItem который получает в пропс наименование товара, его цену и кол-во применить его в BasketContainer

//todo 9) добавить проверку, если товар с таким id уже есть в корзине, увеличить у него count, в  ином случае добавить товар в корзину с count 1

//todo 10)  реализовать функции increment и decrement которые получают id товара и уменьшают увеличивают кол-во товара в корзине.

//todo 11) добавить процесс проверки  если после уменьшения кол-ва count = 0  то удалить товар из корзины

//todo 12) добавить компонент BasketCalculation с рассчетом кол-ва и общей цены

//todo 13) добавить кнопку "очистить корзину"

//todo 14) реализовать процесс удаления товара из корзины по нажатию на кнопку


//* target.count = 1;
    //* setBasket([...basket, target]);      

//! Вариант разбивки useEffect на 2 части
//* async function fetchingProducts() 
//*  {
//*     const resp = await fetch("https://dummyjson.com/products");
//*     const data = await resp.json();
//*     setProducts(data.products);
//*   }
//*   useEffect(() => {
//*     fetchingProducts();
//*   }, []);
  
//! Если функция обычная и не ассинхронная, то ее не нужно делать самовызывающейся
//* useEffect(() => {console.log('выполнено')}, []); 